
type {{ .PlainModel.Name | ToCamel }}DTO struct {
  {{range $index,$fieldMeta := .PlainModel.FieldMetas }}
      {{ $fieldMeta.Name }}
      {{if OfType | $fieldMeta.Type}} {{ ConvertType | $fieldMeta.Type }} {{else}} {{ $fieldMeta.Type }} {{end}}
      {{ $fieldMeta.Tag }}
  {{end}}
}

type Create{{ .CreateModel.Name | ToCamel }}DTO struct {
  {{range $index,$fieldMeta := .CreateModel.FieldMetas }}
      {{ $fieldMeta.Name }}
      {{if OfType | $fieldMeta.Type}} {{ ConvertType | $fieldMeta.Type }} {{else}} {{ $fieldMeta.Type }} {{end}}
      {{ $fieldMeta.Tag }}
  {{end}}
}

type Update{{ .UpdateModel.Name | ToCamel }}DTO struct {
  {{range $index,$fieldMeta := .UpdateModel.FieldMetas }}
      {{ $fieldMeta.Name }}
      {{if OfType | $fieldMeta.Type}} {{ ConvertType | $fieldMeta.Type }} {{else}} {{ $fieldMeta.Type }} {{end}}
      {{ $fieldMeta.Tag }}
  {{end}}
}

func (dto *{{ .CreateModel.Name | ToCamel }}DTO)Map2{{ .CreateModel.Name | ToCamel }}Params() *{{ .Package }}.{{ .CreateModel.Name | ToCamel }}Params {
    return &{{ .Package }}.{{ .CreateModel.Name | ToCamel }}Params{
        {{range $index,$fieldMeta := .CreateModel.FieldMetas }}
            {{ $fieldMeta.Name }}: {{if OfType | $fieldMeta.Type}} {{ Convert2InExpr | $fieldMeta.Name }} {{else}} dto.{{ $fieldMeta.Name }} {{end}} ,
        {{end}}
    }
}

func (dto *{{ .UpdateModel.Name | ToCamel }}DTO)Map2{{ .UpdateModel.Name | ToCamel }}Params() *{{ .Package }}.{{ .UpdateModel.Name | ToCamel }}Params {
    return &{{ .Package }}.{{ .UpdateModel.Name | ToCamel }}Params{
        {{range $index,$fieldMeta := .UpdateModel.FieldMetas }}
            {{ $fieldMeta.Name }}: {{if OfType | $fieldMeta.Type}} {{ Convert2InExpr | $fieldMeta.Name }} {{else}} dto.{{ $fieldMeta.Name }} {{end}} ,
        {{end}}
    }
}

func (entity *{{ .Package }}.{{ .PlainModel.Name | ToCamel }})Map2{{ .PlainModel.Name | ToCamel }}DTO() *{{ .PlainModel.Name | ToCamel }}DTO {
    return &{{ .PlainModel.Name | ToCamel }}DTO{
        {{range $index,$fieldMeta := .PlainModel.FieldMetas }}
            {{ $fieldMeta.Name }}: {{if OfType | $fieldMeta.Type}} {{ Convert2OutExpr | $fieldMeta.Name }} {{else}} entity.{{ $fieldMeta.Name }} {{end}} ,
        {{end}}
    }
}


